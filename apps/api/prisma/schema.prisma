generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model comments {
  id        Int     @id(map: "comments_pk") @default(sequence())
  text      String?
  author_id Int     @default(sequence())
  post_id   Int     @default(sequence())
  posts     posts   @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comments_posts_id_fk")
  users     users   @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comments_users_id_fk")
}

model groups {
  id   Int     @id(map: "groups_pk") @default(sequence())
  name String?
}

model groups_users {
  user_id  Int @default(sequence())
  group_id Int @default(sequence())

  @@id([group_id, user_id], map: "groups_users_pk")
}

model posts {
  id        Int        @id(map: "posts_pk") @default(sequence())
  author_id Int        @default(sequence())
  title     String?
  content   String?
  comments  comments[]
  users     users      @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "posts_users_id_fk")
}

model profile_info {
  id       Int   @id(map: "profile_info_pk") @default(sequence())
  user_id  Int   @default(sequence())
  metadata Json?
  users    users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "profile_info_users_id_fk")
}

model users {
  name         String?
  id           Int            @id(map: "users_pk") @default(sequence())
  email        String?        @unique
  password     String?
  comments     comments[]
  posts        posts[]
  profile_info profile_info[]
}
